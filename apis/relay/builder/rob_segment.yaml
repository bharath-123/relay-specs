post:
  operationId: "submitRobBlockSegment"
  summary: Submit a new ROB block segment to the relay.
  description: |
    * Block segments can be submitted as JSON or SSZ, and optionally GZIP encoded. To be
      clear, there are four options: JSON, JSON+GZIP, SSZ, SSZ+GZIP. If JSON, the
      content type should be `application/json`. If SSZ, the content type should
      be `application/octet-stream`.

    * The ROB segment will have a gas limit of 15m gas units. It cannot consume more then 15m gas units as it
      will be one part of the complete block which will be built. We cannot allow one block segment to consume
      too much gas.

    * If proposer_builder_commitment is FULL_BLOCK, the ROB block segment will be the full block built by the builder.
      If proposer_builder_commitment is TOB_ROB_SPLIT, the ROB block will be validated(in the assembler) for the type of txs
      to avoid state interference.

    * In the case of TOB_ROB_SPLIT proposer_builder_commitment, The relayer will pick up the
      latest highest TOB bid(ideally from a seperate builder) if the segment sent is the highest ROB bid seen by the relayer
      and sends both the TOB and ROB bids to a local block assembler(specs defined in specs/assembler.md).
      The local block assembler validates the TOB and ROB bids for the type of transactions included in them.
      If the validations are successful, the assembler concatenates the TOB and ROB transactions lists and builds
      a new block from them. This block built is stored in the relayer db and is used by the proposer to propose a block.

    * For accountability, builder signature is over the SSZ encoded `message`.

    * The `message`, which does not include the transactions, will be made
      public via the data API, allowing anyone to verify the builder signature.

    * Any new block segment submission by a builder will overwrite a previous one by the same
      `builder_pubkey`, even if it is less profitable.
  tags:
    - Builder # not supporting tob and rob bid cancellations for now. Not sure how it would function
  requestBody:
    description: A signed bid with an execution payload.
    required: true
    content:
      application/json:
        schema:
          oneOf:
            - $ref: "../../../relay-oapi.yaml#/components/schemas/Bellatrix.SubmitBlockRequest"
            - $ref: "../../../relay-oapi.yaml#/components/schemas/Capella.SubmitBlockRequest"
            - $ref: "../../../relay-oapi.yaml#/components/schemas/Deneb.SubmitBlockRequest"
        examples:
          bellatrix:
            $ref: "../../../relay-oapi.yaml#/components/examples/Bellatrix.SubmitBlockRequest"
          capella:
            $ref: "../../../relay-oapi.yaml#/components/examples/Capella.SubmitBlockRequest"
          deneb:
            $ref: "../../../relay-oapi.yaml#/components/examples/Deneb.SubmitBlockRequest"
      application/octet-stream:
        schema:
          description: "SSZ serialized request. Use content type header to indicate that SSZ data is contained in the request body."
  responses:
    "200":
      description: Success response.
    "400":
      description: Error response.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../../relay-oapi.yaml#/components/schemas/ErrorMessage"
              - example:
                  code: 400
                  message: "payload for this slot was already delivered"
    "500":
      $ref: "../../../relay-oapi.yaml#/components/responses/InternalError"